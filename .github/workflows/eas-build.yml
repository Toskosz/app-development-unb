# Nome do workflow exibido na p√°gina de actions.
name: EAS Build

# Faz a pipeline ser executada release √© publicada.
on:
  release:
    types: [published]
      

jobs:
  # A pipeline pode (e deveria) ser dividida em diversos jobs para controlar o fluxo, por exemplo, fazendo o upload somente
  # se todos os testes unit√°rios passarem. Eu n√£o achei que o trabalho extra n√£o valia a raiva que j√° estava passando.
  build:
    # Container a ser utilizado para executar os passos/comandos, com as devidas permiss√µes para poder adicionar ao reposit√≥rio.
    name: Install and build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      # Faz o checkout do projeto
      - uses: actions/checkout@v3
      # Instala e configura o nodejs no container
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      # Instala o cli do expo/eas e vincula √† sua conta do expo a partir de um token de acesso gerado no site do Expo.
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          expo-version: latest
          # Esse campo deve ser configurado nas vari√°veis/secrets do reposit√≥rio no github (acredito que somente o dono do repo tem essas permiss√µes)
          # Ou coloca ele a√≠ hardcoded. I can't stop you. I'm not your real dad.
          token: ${{ secrets.EXPO_TOKEN }}
      # Instala as dependencias para possibilitar o build local
      - name: üèó Setup EAS local builds
        run: yarn global add eas-cli-local-build-plugin
      # Instala as dependencias do projeto
      - name: Install dependencies
        run: npm ci
      - name: Adds env variables to EAS secrets
        run: |
          eas secret:create --scope project --name EXPO_PUBLIC_API_KEY --value ${{ secrets.EXPO_PUBLIC_API_KEY }} --type string
          eas secret:create --scope project --name EXPO_PUBLIC_AUTH_DOMAIN --value ${{ secrets.EXPO_PUBLIC_AUTH_DOMAIN }} --type string
          eas secret:create --scope project --name EXPO_PUBLIC_PROJECT_ID --value ${{ secrets.EXPO_PUBLIC_PROJECT_ID }} --type string
          eas secret:create --scope project --name EXPO_PUBLIC_STORAGE_BUCKET --value ${{ secrets.EXPO_PUBLIC_STORAGE_BUCKET }} --type string
          eas secret:create --scope project --name EXPO_PUBLIC_MESSAGING_SENDER_ID --value ${{ secrets.EXPO_PUBLIC_MESSAGING_SENDER_ID }} --type string
          eas secret:create --scope project --name EXPO_PUBLIC_APP_ID --value ${{ secrets.EXPO_PUBLIC_APP_ID }} --type string
          eas secret:create --scope project --name EXPO_PUBLIC_MEASUREMENT_ID --value ${{ secrets.EXPO_PUBLIC_MEASUREMENT_ID }} --type string

      # Executa o build em s√≠, especificamente para android. Oparametro "platform" pode ser alterado para ios/all, mas configura√ß√µes adicionais
      # no eas.json e na etapa de upload ser√£o necess√°rias para lidar com os novos artefatos. Boa sorte.
      - name: Build on EAS
        run: eas build --local --output=./app-build --platform android --profile preview --non-interactive

      # # Cria a release. Aten√ß√£o para o campo tag_name. Ele √© obrigat√≥rio e deve ser √∫nico.
      # # Ele est√° configurado para utilizar o nome da branch que est√° sendo mesclada na main.
      # # Logo, se um novo merge acontecer a partir da MESMA branch, ele vai falhar porque o tag vai ser duplicado.
      # # √â poss√≠vel utilizar campos mais din√¢micos, para requer melhor preparo do ambiente/vari√°veis/arquivo.
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.head_ref }}
      #     release_name: Release ${{ github.head_ref }}
      #     body: |
      #       Android release
      #     draft: false
      #     prerelease: false

      # Faz o upload do artefato gerado para a action. Isso √© mais para hist√≥rico e backup, s√≥ √© acess√≠vel pelo console do projeto.
      - name: Upload Artifact to Actions
        uses: actions/upload-artifact@v2
        with:
          name: app-android
          path: app-build

      - name: Gets latest created release info
        id: latest_release_info
        uses: jossef/action-latest-release-info@v1.2.2

      # Faz o upload do artefato gerado para a release criada anteriormente.
      # O campo asset_name √© arbitr√°rio, altere para o que acha que melhor descreve o app. Ele pode ser din√¢mico a fim de descrever
      # a vers√£o/tag de origem do apk.
      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: ./app-build
          asset_name: meau.apk
          asset_content_type: application/vnd.android.package-archive
